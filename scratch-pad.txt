USER MODEL
-------------
email: VARCHAR 255 (string)
password: VARCHAR 255 (string)

sequelize model:create --name user --attributes firstName:string,lastName:string,email:string,password:string

sequelize model:create --name save_job --attributes userId:string,positionName:string,jobLink:string,company:string,location:string,dateAdded:string 

sequelize model:create --name job_note --attributes note:text,date:date


<input hidden value="<%= jobs.id %>" name="jobId">


<body>
    <div class="nav justify-content-end" >
        <div class="row">
                <nav>
                <!-- if the user is logged in... -->
                <!-- all data in the res.locals is usable in the layout -->
                    <div class="col" >
                        <% if (user) { %>
                        <a href="/users/profile">Profile</a>
                        <a href="/users/logout">Logout</a>
                    
    
                        <% } else { %>
                        <a href="/users/new">Sign Up</a>
                        <a href="/users/login">Login</a>
                        <% } %>
                    </div>
                </nav>
     </div>
    </div>
    <%- body %>
</body>

'use strict';
const {
  Model
} = require('sequelize');
module.exports = (sequelize, DataTypes) => {
  class job_note extends Model {
    /**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */
    static associate(models) {
      // define association here
      models.job_note.belongsTo(models.save_job)
    }
  }
  job_note.init({
    note: DataTypes.TEXT,
    jobId: DataTypes.INTEGER
  }, {
    sequelize,
    modelName: 'job_note',
  });
  return job_note;
};


'use strict';
const {
  Model
} = require('sequelize');
module.exports = (sequelize, DataTypes) => {
  class save_job extends Model {
    /**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */
    static associate(models) {
      // define association here
      models.save_job.hasMany(models.job_note)
    }
  }
  save_job.init({
    userId: DataTypes.STRING,
    positionName: DataTypes.STRING,
    jobLink: DataTypes.STRING,
    company: DataTypes.STRING,
    location: DataTypes.STRING,
    dateAdded: DataTypes.STRING
  }, {
    sequelize,
    modelName: 'save_job',
  });
  return save_job;
};

'use strict';
const {
  Model
} = require('sequelize');
module.exports = (sequelize, DataTypes) => {
  class user extends Model {
    /**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */
    static associate(models) {
      // define association here
    }
  }
  user.init({
    email: DataTypes.STRING,
    password: DataTypes.STRING
  }, {
    sequelize,
    modelName: 'user',
  });
  return user;
};

express_auth_boilerplate




SEARCH RESULTS EJS
<ul>
<% jobs.forEach(job => { %>
<span><%= job.name %></span>
<p><%= job.locations[0].name %></p>
<a href = '/jobs/info/<%= job.id %>'>More details</a>
                
                
 <% }) %>
</ul>



SAVED JOB BOARD EJS
<h1>Your Saved Job Board:</h1>


<% saved.forEach(save => { %>
    <div>
        <h3><%= save.positionName %></h3>
        <h3><%= save.jobLink %></h3>
        <h3><%= save.company %></h3>
        <h3><%= save.location %></h3>

    

        <form method="GET" action="/job-notes/<%=save.id%>" >
            <input type="submit" name="id" value="View Job Details/Notes" >

        </form>

        <form method="POST" action="/users/job-board/<%=save.id%>/?_method=DELETE">
            <input type="submit" value="Remove from Job Board">
        </form>


    </div>
<% }) %>

